apiVersion: v1
data:
  silence: |
    #!/bin/bash
    set -euo pipefail

    curl_opts=( https://alertmanager-main.openshift-monitoring.svc.cluster.local:9095/api/v2/silences --cacert /etc/ssl/certs/serving-certs/service-ca.crt --header 'Content-Type: application/json' --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" --resolve "alertmanager-main.openshift-monitoring.svc.cluster.local:9095:$(getent hosts alertmanager-operated.openshift-monitoring.svc.cluster.local | awk '{print $1}' | head -n 1)" --silent )

    while IFS= read -r silence; do
      comment=$(printf %s "${silence}" | jq -r '.comment')

      body=$(printf %s "$silence" | \
        jq \
          --arg startsAt "$(date -u +'%Y-%m-%dT%H:%M:%S' --date '-1 min')" \
          --arg endsAt "$(date -u +'%Y-%m-%dT%H:%M:%S' --date '+1 day')" \
          --arg createdBy "Kubernetes object \`cronjob/silence\` in the monitoring namespace" \
          '.startsAt = $startsAt | .endsAt = $endsAt | .createdBy = $createdBy'
      )

      id=$(curl "${curl_opts[@]}" | jq -r ".[] | select(.status.state == \"active\") | select(.comment == \"${comment}\") | .id" | head -n 1)
      if [ -n "${id}" ]; then
        body=$(printf %s "${body}" | jq --arg id "${id}" '.id = $id')
      fi

      curl "${curl_opts[@]}" -XPOST -d "${body}"
    done <<<"$(printf %s "${SILENCES_JSON}" | jq -cr '.[]')"
  silences.json: '[{"comment":"Silence non syn alerts","matchers":[{"isRegex":true,"name":"alertname","value":".+"},{"isRegex":false,"name":"syn","value":""},{"isRegex":true,"name":"alertname","value":".+"},{"isRegex":false,"name":"syn","value":""}]}]'
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    name: silence
  name: silence
  namespace: openshift-monitoring
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations: {}
  labels:
    name: silence
  name: silence
  namespace: openshift-monitoring
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            name: silence
        spec:
          containers:
            - args: []
              command:
                - /usr/local/bin/silence
              env:
                - name: SILENCES_JSON
                  valueFrom:
                    configMapKeyRef:
                      key: silences.json
                      name: silence
              image: quay.io/appuio/oc:v4.17
              imagePullPolicy: IfNotPresent
              name: silence
              ports: []
              stdin: false
              tty: false
              volumeMounts:
                - mountPath: /etc/ssl/certs/serving-certs/
                  name: ca-bundle
                  readOnly: true
                - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
                  name: kube-api-access
                  readOnly: true
                - mountPath: /usr/local/bin/silence
                  name: scripts
                  readOnly: true
                  subPath: silence
          imagePullSecrets: []
          initContainers: []
          nodeSelector:
            node-role.kubernetes.io/infra: ''
          restartPolicy: Never
          serviceAccountName: prometheus-k8s
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 288
                name: serving-certs-ca-bundle
              name: ca-bundle
            - name: kube-api-access
              projected:
                defaultMode: 420
                sources:
                  - serviceAccountToken:
                      expirationSeconds: 3607
                      path: token
            - configMap:
                defaultMode: 360
                name: silence
              name: scripts
  schedule: 0 */4 * * *
  successfulJobsHistoryLimit: 3
