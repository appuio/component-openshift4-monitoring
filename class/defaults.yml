parameters:
  openshift4_monitoring:
    namespace: openshift-monitoring
    defaultConfig:
      nodeSelector:
        node-role.kubernetes.io/infra: ''
    configs:
      prometheusK8s:
        externalLabels:
          cluster_id: ${cluster:name}
          tenant_id: ${cluster:tenant}
        retention: 8d
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 50Gi
      prometheusUserWorkload: ${openshift4_monitoring:configs:prometheusK8s}
      prometheusOperator: {}
      prometheusOperatorUserWorkload: {}
      alertmanagerMain:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 2Gi
      kubeStateMetrics: {}
      grafana: {}
      telemeterClient: {}
      k8sPrometheusAdapter: {}
      openshiftStateMetrics: {}
      thanosQuerier: {}
      thanosRuler: {}
    alertManagerConfig:
      route:
        group_wait: 0s
        group_interval: 5s
        repeat_interval: 10m
      inhibit_rules:
        # Don't send warning or info if a critical is already firing
        - target_match_re:
            severity: warning|info
          source_match:
            severity: critical
          equal:
            - namespace
            - alertname
        # Don't send info if a warning is already firing
        - target_match_re:
            severity: info
          source_match:
            severity: warning
          equal:
            - namespace
            - alertname
    alerts:
      ignoreNames: []
      customAnnotations: {}

    silence:
      schedule: '0 */4 * * *'
      serviceAccountName: prometheus-k8s
      servingCertsCABundleName: serving-certs-ca-bundle
      jobHistoryLimit:
        failed: 3
        successful: 3

    images:
      oc:
        image: quay.io/appuio/oc
        tag: v4.6@sha256:d7a50d8812bc13e2a1cef119d268ebb051e9ffb53960942180a36982ec59f647
